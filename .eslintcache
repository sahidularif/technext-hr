[{"D:\\Web Developement\\project\\drag-and-drop\\src\\index.js":"1","D:\\Web Developement\\project\\drag-and-drop\\src\\App.js":"2","D:\\Web Developement\\project\\drag-and-drop\\src\\reportWebVitals.js":"3","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\Dropzone.js":"4","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\Home.js":"5","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\SideNav.js":"6","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\Employee.js":"7","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\FilteringTable.js":"8","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\GlobalFilter.js":"9","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\column.js":"10","D:\\Web Developement\\project\\drag-and-drop\\src\\utils\\API.js":"11","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\Mail.js":"12","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\modal\\Modal.js":"13","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\CloseIcon.js":"14"},{"size":517,"mtime":1629457314550,"results":"15","hashOfConfig":"16"},{"size":512,"mtime":1630419955576,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1629457314550,"results":"18","hashOfConfig":"16"},{"size":3935,"mtime":1630419472235,"results":"19","hashOfConfig":"16"},{"size":5415,"mtime":1630419470030,"results":"20","hashOfConfig":"16"},{"size":1217,"mtime":1630419964367,"results":"21","hashOfConfig":"16"},{"size":2276,"mtime":1630449518608,"results":"22","hashOfConfig":"16"},{"size":8585,"mtime":1630476940501,"results":"23","hashOfConfig":"16"},{"size":445,"mtime":1630435914992,"results":"24","hashOfConfig":"16"},{"size":345,"mtime":1630446249198,"results":"25","hashOfConfig":"16"},{"size":140,"mtime":1630441168002,"results":"26","hashOfConfig":"16"},{"size":1698,"mtime":1630478786506,"results":"27","hashOfConfig":"16"},{"size":779,"mtime":1630478458841,"results":"28","hashOfConfig":"16"},{"size":968,"mtime":1630464974550,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1v5b0f4",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"D:\\Web Developement\\project\\drag-and-drop\\src\\index.js",[],["67","68"],"D:\\Web Developement\\project\\drag-and-drop\\src\\App.js",["69"],"import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Employee from './component/Employee';\r\nimport Home from './component/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/addEmployee' component={Home}></Route>\r\n          <Route exact path='/' component={Employee}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Web Developement\\project\\drag-and-drop\\src\\reportWebVitals.js",[],"D:\\Web Developement\\project\\drag-and-drop\\src\\component\\Dropzone.js",["70","71","72","73","74"],"import React, { useRef, useState } from 'react';\r\nimport Papa from 'papaparse';\r\nimport './Dropzone.css';\r\n\r\n// #########################################################\r\n\r\nconst Dropzone = () => {\r\n  const fileInputRef = useRef();\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [invalidFileMsg, setInvalidFileMsg] = useState('');\r\n  const [highlighted, setHighlighted] = useState(false);\r\n\r\n  // ::::::::::HANDLE DRAG & DROP:::::::::::::\r\n\r\n  const preventDefault = (e) => {\r\n    e.preventDefault();\r\n    // e.stopPropagation();\r\n  }\r\n\r\n  const dragOver = (e) => {\r\n    preventDefault(e);\r\n  }\r\n\r\n  const dragEnter = (e) => {\r\n    preventDefault(e);\r\n    setHighlighted(true);\r\n  }\r\n\r\n  const dragLeave = (e) => {\r\n    preventDefault(e);\r\n    setHighlighted(false);\r\n  }\r\n\r\n  const fileDrop = (e) => {\r\n    preventDefault(e);\r\n    const files = e.dataTransfer.files;\r\n    if (files.length) {\r\n      handleFiles(files);\r\n    }\r\n  }\r\n\r\n  //::::::::::::HANDLE FILE SELECT::::::::::::::\r\n\r\n  const filesSelected = () => {\r\n    if (fileInputRef.current.files.length) {\r\n      handleFiles(fileInputRef.current.files);\r\n    }\r\n  }\r\n\r\n  const fileInputClicked = () => {\r\n    fileInputRef.current.click();\r\n  }\r\n\r\n  //::::::::::::HANDLE FILE UPLOAD::::::::::::::: \r\n\r\n  const handleFiles = (files) => {\r\n    let fileInput = files[0];\r\n    const fileName = fileInput.name;\r\n    const patternFileExtension = /.*\\.(xlsx|xls|csv)/i;\r\n    if (((fileName).match(patternFileExtension))) {\r\n      // setSelectedFiles(files);\r\n      handleFileUpload(files)\r\n      return true\r\n    }\r\n    else {\r\n      setInvalidFileMsg('Please select valid file');\r\n      return false\r\n    }\r\n  }\r\n\r\n  const handleFileUpload = (files) => {\r\n    if (files.length) {\r\n      var file = files[0];\r\n      var reader = new FileReader();\r\n      reader.readAsText(file);\r\n      reader.onload = function (event) {\r\n        var csvData = event.target.result;\r\n        var data = Papa.parse(csvData, {\r\n          header: true,\r\n          dynamicTyping: true,\r\n          skipEmptyLines: true,\r\n          transformHeader: (header) => header.toLowerCase().replace(/\\W/g, \"_\"),\r\n        });\r\n        let rows = data.data;\r\n        console.log(\"data:\", rows);\r\n        let employes = [];\r\n        const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        employes = rows.filter((row) => row.first_name != null && (pattern.test(row.email.toLowerCase())));\r\n        console.log(employes);\r\n\r\n        handleInsertToDatabase(employes);\r\n      };\r\n      reader.onerror = function () {\r\n        alert('Unable to read ' + file.fileName);\r\n      };\r\n    }\r\n  }\r\n\r\n  const handleInsertToDatabase = (data) => {\r\n    let insertData = JSON.stringify(data);\r\n    fetch(\"http://localhost:9000/bulkcreate\", {\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: insertData,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => console.log(data));\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className={`${highlighted ? \"border-green-600 bg-green-100\" : \"drop-container\"}`}\r\n          onDragEnter={dragEnter}\r\n          onDragLeave={dragLeave}\r\n          onDragOver={dragOver}\r\n          onDrop={fileDrop}\r\n          onClick={fileInputClicked}\r\n        >\r\n          <div className=\"drop-message\">\r\n            <div className=\"upload-icon\"></div>\r\n            Drag & Drop files here or click to select file(s)\r\n          </div>\r\n          <form>\r\n            <input\r\n              ref={fileInputRef}\r\n              className=\"file-input\"\r\n              type=\"file\"\r\n              multiple\r\n              onChange={filesSelected}\r\n            />\r\n          </form>\r\n        </div>\r\n        <h5>\r\n\r\n        </h5>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dropzone;\r\n","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\Home.js",["75","76","77"],"import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport './Home.css';\r\nimport Dropzone from './Dropzone';\r\nimport SideNav from './SideNav';\r\n//::::::::::::::::::::::::::::::::::::::::::::\r\nconst Home = () => {\r\n    const [employee, setEmployee] = useState({});\r\n    const { register, handleSubmit, watch, formState: { errors }\r\n    } = useForm();\r\n\r\n    // When form submitted:\r\n    const onSubmit = (data) => {\r\n        let employee = JSON.stringify(data);\r\n        console.log(data)\r\n        fetch(\"http://localhost:9000/customers\", {\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: employee,\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => console.log(data));\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid mx-0 px-0 gx-0\">\r\n            <div className=\"row mx-0 px-0 gx-0\">\r\n                <div className=\"col-md-3\">\r\n                    <SideNav />\r\n                </div>\r\n                <div className=\"col-md-9 right-side\">\r\n                    <div className=\"row justify-content-end main-container gx-0\">\r\n                        <div className=\"header\">\r\n                            <a href=\"#default\" className=\"logo\">Add Employee</a>\r\n                            <div className=\"header-right\">\r\n                                <a className=\"active\" href=\"#home\">LOG OUT</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row justify-content-center mt-3\">\r\n                        <div className=\"col-md-8 alert alert-success\" role=\"alert\">\r\n                            <i class=\"fas fa-check-circle\"></i> Employee successfully inserted!\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row m-0 p-0 justify-content-center mt-5\">\r\n                        <div className=\"col-md-10 entry-form p-5\">\r\n                            <h4>Add Employee</h4>\r\n                            <form className=\"row g-3\" onSubmit={handleSubmit(onSubmit)}>\r\n                                <div class=\"col-md-6\">\r\n                                    <label for=\"first_name\" className=\"form-label\">First Name</label>\r\n                                    <input type=\"text\" name=\"first_name\" className=\"form-control\" id=\"first_name\"\r\n                                        {...register(\"first_name\", { required: true })} />\r\n                                    {errors.first_name && <span><i class=\"fas fa-exclamation-triangle\"></i> This field is required</span>}\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <label for=\"last_name\" className=\"form-label\">Last Name</label>\r\n                                    <input type=\"text\" name=\"last_name\" className=\"form-control\" id=\"last_name\"\r\n                                        {...register(\"last_name\", { required: true })} />\r\n                                    {errors.last_name && <span><i class=\"fas fa-exclamation-triangle\"></i> This field is required</span>}\r\n                                </div>\r\n                                <div class=\"col-12\">\r\n                                    <label for=\"email\" className=\"form-label\">Email Address</label>\r\n                                    <input type=\"email\" name=\"email\" className=\"form-control\" id=\"email\"\r\n                                        placeholder=\"username@domain.com\"\r\n                                        {...register(\"email\", {\r\n                                            required: true, pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                        })}\r\n                                    />\r\n                                    {errors.email && <span className=\"error\"><i class=\"fas fa-exclamation-triangle\"></i> This field is required</span>}\r\n                                    {errors?.lastName?.type === \"pattern\" && (\r\n                                        <p>Please enter valid email</p>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <button type=\"submit\" className=\"btn btn-submit\">Sign in</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-10 new-notification-header\">\r\n                            <div className=\"new-notification-title\">\r\n                                <p></p>\r\n                                <h4>OR</h4>\r\n                                <p></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center align-items-center\">\r\n                        <div className=\"col-md-10 justify-content-center\">\r\n                            <Dropzone />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\SideNav.js",["78"],"import React from 'react';\r\nimport { FaRocket } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../images/logo.png';\r\nconst SideNav = () => {\r\n    return (\r\n        <div className=\"sidenav-container\">\r\n            <div className=\"row justify-content-between border g-0 p-4 align-items-center\">\r\n                <div className=\"col-md-3 brand-icon\">\r\n                    <img src={logo} alt=\"Brand logo\" className=\"rounded-circle\" />\r\n                </div>\r\n                <div className=\"col-md-9 ps-2\">\r\n                    <h5><strong>Technext HR</strong></h5>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidemenu border\">\r\n                <ul>\r\n                    <li>\r\n                    <i class=\"fas fa-user-shield\"></i> <b>HRMS</b>\r\n                        <ul>\r\n                            <li><Link to=\"/\">Employees</Link></li>\r\n                            <li><Link to=\"/addEmployee\">Add Employee</Link></li>\r\n                            <li>Mail2Employee</li>\r\n                        </ul>\r\n                    </li>\r\n                    \r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideNav;","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\Employee.js",[],"D:\\Web Developement\\project\\drag-and-drop\\src\\component\\FilteringTable.js",["79","80","81","82","83","84","85","86","87","88","89"],"import React, { useMemo, useState } from 'react'\r\nimport { useTable, useRowSelect, useSortBy, useGlobalFilter, usePagination } from 'react-table'\r\nimport { Jumbotron, Col, InputGroup, FormControl, Row, Table, Form, Container, Button } from 'react-bootstrap';\r\nimport { COLUMNS } from \"./column\";\r\nimport '../styles/table.css';\r\nimport { GlobalFilter } from \"./GlobalFilter\"\r\nimport Mail from './Mail';\r\n\r\n\r\n// set up a component for the table that will take in and display the employee information\r\nconst FilteringTable = (props) => {\r\n\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n        ({ indeterminate, ...rest }, ref) => {\r\n            const defaultRef = React.useRef()\r\n            const resolvedRef = ref || defaultRef\r\n\r\n            React.useEffect(() => {\r\n                resolvedRef.current.indeterminate = indeterminate\r\n            }, [resolvedRef, indeterminate])\r\n\r\n            return (\r\n                <>\r\n                    <input type=\"checkbox\" ref={resolvedRef} {...rest} /> Select All\r\n                </>\r\n            )\r\n        }\r\n    )\r\n    const columns = useMemo(() => COLUMNS, [])\r\n    const data = props.data;\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data,\r\n        initialState: { pageIndex: 0 }\r\n    },\r\n        useGlobalFilter,\r\n        useSortBy,\r\n        usePagination,\r\n        useRowSelect,\r\n        hooks => {\r\n            hooks.visibleColumns.push(columns => [\r\n                // Let's make a column for selection\r\n                {\r\n                    id: 'selection',\r\n                    // The header can use the table's getToggleAllRowsSelectedProps method\r\n                    // to render a checkbox\r\n                    Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                        <div>\r\n                            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                        </div>\r\n                    ),\r\n                    // The cell can use the individual row's getToggleRowSelectedProps method\r\n                    // to the render a checkbox\r\n                    Cell: ({ row }) => (\r\n                        <div>\r\n                            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                        </div>\r\n                    ),\r\n                },\r\n                ...columns,\r\n            ])\r\n        }\r\n    )\r\n\r\n    // destructure table instance to get the required components\r\n    const {\r\n        getTableProps,\r\n        setPageSize,\r\n        gotoPage,\r\n        state,\r\n        setGlobalFilter,\r\n        getTableBodyProps,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        headerGroups,\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        pageOptions,\r\n        pageCount,\r\n        prepareRow,\r\n        selectedFlatRows\r\n    }\r\n        = tableInstance\r\n\r\n    const { globalFilter, pageSize, pageIndex, selectedRowIds } = state\r\n\r\n\r\n    // Sets up the table JSX that will be displayed on the site, including a search filter functionality\r\n    return (\r\n        <>\r\n\r\n            <div className=\"row d-flex table-header\">\r\n                <div className=\"col-md-4\"><h5>Employee Lists</h5></div>\r\n                <div className=\"col-md-4\">\r\n                    <Form>\r\n                        <InputGroup className=\"\">\r\n                            <FormControl\r\n                                placeholder=\"Search User\"\r\n                                // onChange={handleUserSerach}\r\n                                // value={userSearch ? userSearch : ''}\r\n                                name=\"userSearch\"\r\n                                id=\"userSearch\"\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <button type=\"button\" className=\"btn btn-outline-primary\">Search</button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <Mail />\r\n                </div>\r\n            </div>\r\n            <table {...getTableProps()} className=\"table table-striped table-hover\">\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {\r\n                                headerGroup.headers.map((column) => (\r\n                                    <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                        {column.render(\"Header\")}\r\n                                        <span>\r\n                                            {column.isSorted ? (column.isSortedDesc ? <img src=\"https://cdn3.iconfinder.com/data/icons/faticons/32/arrow-down-01-512.png\" alt=\"desc\" height=\"15px\" width=\"15px\" /> : <img src=\"https://cdn3.iconfinder.com/data/icons/faticons/32/arrow-up-01-512.png\" height=\"15px\" width=\"15px\" alt=\"asc\" />) : \"\"}\r\n                                        </span>\r\n                                    </th>\r\n                                ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {\r\n                        page.map(row => {\r\n                            prepareRow(row)\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    {\r\n                                        row.cells.map(cell => {\r\n                                            return <td {...cell.getCellProps()}> {cell.render(\"Cell\")}</td>\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                </tbody>\r\n            </table>\r\n            {/* Sets up the pagination feature for the table */}\r\n            <div className=\"pagination justify-content-between pb-3\">\r\n                <div className=\"page\">\r\n                    <span>\r\n                        Page{' '}\r\n                        <strong>\r\n                            {pageIndex + 1} of {pageOptions.length}\r\n                        </strong>{' '}\r\n                    </span>\r\n                    <select value={pageSize} onChange={e => setPageSize(Number(e.target.value))}>\r\n                        {\r\n                            [5, 10, 25].map(pageSize => (\r\n                                <option key={pageSize} value={pageSize}>\r\n                                    Show {pageSize}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                    <span>\r\n                        {' '}Go To Page: {' '}\r\n                        <input type=\"number\" defaultValue={pageIndex + 1} onChange={e => {\r\n                            const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0\r\n                            gotoPage(pageNumber)\r\n                        }}\r\n                            style={{ width: '50px' }} />\r\n                    </span>\r\n\r\n                </div>\r\n                <div className=\"nextPrevious\">\r\n                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</button>\r\n                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => previousPage()} disabled={!canPreviousPage}>Previous</button>\r\n                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => nextPage()} disabled={!canNextPage}>Next</button>\r\n                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>{'>>'}</button>\r\n                </div>\r\n                <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\r\n                <pre>\r\n                    <code>\r\n                        {/* {JSON.stringify(\r\n                            {\r\n                                selectedRowIds: selectedRowIds,\r\n                                'selectedFlatRows[].original': selectedFlatRows.map(\r\n                                    d => d.original\r\n                                ),\r\n                            },\r\n                            null,\r\n                            2\r\n                        )} */}\r\n                    </code>\r\n                </pre>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default FilteringTable;","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\GlobalFilter.js",[],"D:\\Web Developement\\project\\drag-and-drop\\src\\component\\column.js",[],"D:\\Web Developement\\project\\drag-and-drop\\src\\utils\\API.js",["90"],"import axios from \"axios\";\r\n\r\nexport default {\r\n  getData: function() {\r\n    return  axios.get(\"http://localhost:9000/customers\")\r\n    }\r\n};","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\Mail.js",[],"D:\\Web Developement\\project\\drag-and-drop\\src\\component\\modal\\Modal.js",["91","92"],"import React, { useEffect, useRef } from \"react\";\r\nimport CloseIcon from \"../CloseIcon\";\r\nimport styles from \"./modal.module.css\";\r\nimport { FaWindowClose } from 'react-icons/fa';\r\n\r\nconst Modal = ({ modalStyle, children, show, onClose, backdropStyle }) => {\r\n  const modalRef = useRef(null);\r\n  useEffect(() => {\r\n    if (show) {\r\n      modalRef.current.classList.add(styles.visible);\r\n    } else {\r\n      modalRef.current.classList.remove(styles.visible);\r\n    }\r\n  }, [show]);\r\n  return (\r\n    <React.Fragment>\r\n      <div ref={modalRef} style={backdropStyle} className={`${styles.modal}`}>\r\n       \r\n        <div style={modalStyle} className={styles.modal__wrap}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","D:\\Web Developement\\project\\drag-and-drop\\src\\component\\CloseIcon.js",[],["93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":6,"column":3,"nodeType":"101","messageId":"102","endLine":6,"endColumn":7},{"ruleId":"99","severity":1,"message":"103","line":9,"column":10,"nodeType":"101","messageId":"102","endLine":9,"endColumn":22},{"ruleId":"99","severity":1,"message":"104","line":9,"column":24,"nodeType":"101","messageId":"102","endLine":9,"endColumn":39},{"ruleId":"99","severity":1,"message":"105","line":10,"column":10,"nodeType":"101","messageId":"102","endLine":10,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":87,"column":35,"nodeType":"108","messageId":"109","endLine":87,"endColumn":36,"suggestions":"110"},{"ruleId":"106","severity":1,"message":"107","line":87,"column":60,"nodeType":"108","messageId":"109","endLine":87,"endColumn":61,"suggestions":"111"},{"ruleId":"99","severity":1,"message":"112","line":8,"column":12,"nodeType":"101","messageId":"102","endLine":8,"endColumn":20},{"ruleId":"99","severity":1,"message":"113","line":8,"column":22,"nodeType":"101","messageId":"102","endLine":8,"endColumn":33},{"ruleId":"99","severity":1,"message":"114","line":9,"column":37,"nodeType":"101","messageId":"102","endLine":9,"endColumn":42},{"ruleId":"99","severity":1,"message":"115","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":18},{"ruleId":"99","severity":1,"message":"116","line":1,"column":26,"nodeType":"101","messageId":"102","endLine":1,"endColumn":34},{"ruleId":"99","severity":1,"message":"117","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":19},{"ruleId":"99","severity":1,"message":"118","line":3,"column":21,"nodeType":"101","messageId":"102","endLine":3,"endColumn":24},{"ruleId":"99","severity":1,"message":"119","line":3,"column":51,"nodeType":"101","messageId":"102","endLine":3,"endColumn":54},{"ruleId":"99","severity":1,"message":"120","line":3,"column":56,"nodeType":"101","messageId":"102","endLine":3,"endColumn":61},{"ruleId":"99","severity":1,"message":"121","line":3,"column":69,"nodeType":"101","messageId":"102","endLine":3,"endColumn":78},{"ruleId":"99","severity":1,"message":"122","line":3,"column":80,"nodeType":"101","messageId":"102","endLine":3,"endColumn":86},{"ruleId":"99","severity":1,"message":"123","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":22},{"ruleId":"99","severity":1,"message":"124","line":72,"column":9,"nodeType":"101","messageId":"102","endLine":72,"endColumn":24},{"ruleId":"99","severity":1,"message":"125","line":83,"column":9,"nodeType":"101","messageId":"102","endLine":83,"endColumn":25},{"ruleId":"99","severity":1,"message":"126","line":87,"column":13,"nodeType":"101","messageId":"102","endLine":87,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":3,"column":1,"nodeType":"129","endLine":7,"endColumn":3},{"ruleId":"99","severity":1,"message":"130","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":17},{"ruleId":"99","severity":1,"message":"131","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":23},{"ruleId":"95","replacedBy":"132"},{"ruleId":"97","replacedBy":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'invalidFileMsg' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["136","137"],["138","139"],"'employee' is assigned a value but never used.","'setEmployee' is assigned a value but never used.","'watch' is assigned a value but never used.","'FaRocket' is defined but never used.","'useState' is defined but never used.","'Jumbotron' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Table' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","'GlobalFilter' is defined but never used.","'setGlobalFilter' is assigned a value but never used.","'selectedFlatRows' is assigned a value but never used.","'globalFilter' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'CloseIcon' is defined but never used.","'FaWindowClose' is defined but never used.",["134"],["135"],"no-global-assign","no-unsafe-negation",{"messageId":"140","fix":"141","desc":"142"},{"messageId":"143","fix":"144","desc":"145"},{"messageId":"140","fix":"146","desc":"142"},{"messageId":"143","fix":"147","desc":"145"},"removeEscape",{"range":"148","text":"149"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"150","text":"151"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"152","text":"149"},{"range":"153","text":"151"},[2293,2294],"",[2293,2293],"\\",[2318,2319],[2318,2318]]